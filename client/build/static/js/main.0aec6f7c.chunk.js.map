{"version":3,"sources":["svg-icons/sprite.svg","pages/SplashPage/SplashPage.jsx","components/PhrasesList/PhrasesList.jsx","utils/utils.js","components/textArea/TextAreaForm.jsx","pages/CreatePage/CreatePage.jsx","components/LoadingSpinner/LoadingSpinnerStyles.jsx","components/LoadingSpinner/LoadingSpinner.jsx","App.js","pages/Home/Home.jsx","reportWebVitals.js","index.js"],"names":["Splash","className","viewBox","href","sprite","to","PhrasesList","allLocalPhrases","searchResults","map","phrase","format","createdAt","_id","handleSaveDataToLocal","data","localStorage","setItem","JSON","stringify","TextAreaForm","onSubmit","localNewPhrase","history","useHistory","useForm","defaultValues","register","submitHandler","handleSubmit","console","log","handleLastPhraseToLocal","push","id","name","rows","cols","autoFocus","ref","maxLength","type","CreatePage","a","requestOptions","method","headers","body","fetch","then","response","json","catch","err","parse","getItem","SpinnerOverlay","styled","div","SpinnerContainer","LoadingSpinner","WrappedComponent","isLoading","otherProps","HomePageWithSpinner","LoadSpinner","useState","searchInput","setInput","allLocalPhrasesArr","lastPost","slice","pop","newPost","filter","item","toLowerCase","includes","placeholder","onChange","e","preventDefault","searchValue","target","value","App","allPhrases","setData","setIsLoading","useEffect","axios","get","resp","fetchData","exact","path","component","SplashPage","render","props","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0aec6f7c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sprite.b969724c.svg\";","import React from \"react\";\r\nimport sprite from \"../../svg-icons/sprite.svg\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"../../sass/style.scss\";\r\n\r\nconst Splash = () => {\r\n  return (\r\n    <div className=\"splash-page\">\r\n      <svg className=\"splash-page__img\" viewBox=\"0 0 100 100\">\r\n        <use href={sprite + \"#Notebook-bro\"}></use>\r\n      </svg>\r\n      <div className=\"splash-page__main-wrapper\">\r\n        {\" \"}\r\n        <h2 className=\"header-medium\">Welcome</h2>\r\n        <p className=\"paragraph\">\r\n          What are you grateful for today? Capture that on a simple phrase and\r\n          save it. View gratitude statements from a previous day through the\r\n          calendar.\r\n        </p>\r\n        <Link to=\"/home\">\r\n          <button className=\"btn splash-page__btn\">&rarr; Let's Start</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Splash;\r\n","import React from \"react\";\r\nimport \"../../sass/style.scss\";\r\nimport Moment from \"react-moment\";\r\nimport \"moment-timezone\";\r\n\r\nfunction PhrasesList({ allLocalPhrases, searchResults }) {\r\n  if (!allLocalPhrases) {\r\n    <h3 className=\"error-msg\">Data not found</h3>;\r\n  } else {\r\n    return (\r\n      <div className=\"phrases-list\">\r\n        {searchResults?.map((phrase) => (\r\n          <div key={phrase._id} className=\"phrases-list__item\">\r\n            <div className=\"phrases-list__date\">\r\n              <p>\r\n                <Moment format=\"MMM\">{phrase.createdAt}</Moment>\r\n              </p>\r\n              <p>\r\n                <Moment className=\"phrases-list__day\" format=\"Do\">\r\n                  {phrase.createdAt}\r\n                </Moment>\r\n              </p>\r\n              <p>\r\n                <Moment format=\"YYYY\">{phrase.createdAt}</Moment>\r\n              </p>\r\n            </div>\r\n\r\n            <p className=\"phrases-list__text\">{phrase.phrase}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PhrasesList;\r\n","export const handleSaveDataToLocal = (data) => {\r\n  localStorage.setItem(\"allLocalPhrases\", JSON.stringify(data));\r\n};\r\n\r\nexport const handleLastPhraseToLocal = (data) => {\r\n  localStorage.setItem(\"localNewPhrase\", JSON.stringify(data));\r\n};\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { handleLastPhraseToLocal } from \"../../utils/utils.js\";\r\n\r\nimport \"../../sass/style.scss\";\r\n\r\nexport default function TextAreaForm({ onSubmit, localNewPhrase }) {\r\n  let history = useHistory();\r\n\r\n  const { register, handleSubmit } = useForm({\r\n    defaultValues: {\r\n      phrase: localNewPhrase,\r\n    },\r\n  });\r\n\r\n  const submitHandler = handleSubmit((data) => {\r\n    console.log(JSON.stringify(data));\r\n    onSubmit(data);\r\n    handleLastPhraseToLocal(data);\r\n\r\n    history.push(\"/home\");\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"create-page__phrase\">\r\n        <textarea\r\n          id=\"createPhrase\"\r\n          name=\"phrase\"\r\n          className=\"paragraph\"\r\n          rows=\"2\"\r\n          cols=\"50\"\r\n          autoFocus\r\n          ref={register({ maxLength: 80 })}\r\n        ></textarea>\r\n      </div>\r\n      <button type=\"submit\" className=\"create-page__btn btn\">\r\n        &#10003; Save\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport sprite from \"../../svg-icons/sprite.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport TextAreaForm from \"../../components/textArea/TextAreaForm\";\r\n\r\nimport \"../../sass/style.scss\";\r\n\r\nfunction CreatePage() {\r\n  const onSubmit = async (data) => {\r\n    const requestOptions = {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        phrase: data.phrase,\r\n      }),\r\n    };\r\n\r\n    await fetch(\"/phrases\", requestOptions)\r\n      .then((response) => response.json())\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  let localNewPhrase = JSON.parse(localStorage.getItem(\"localNewPhrase\"))\r\n    ?.phrase;\r\n\r\n  return (\r\n    <div className=\"create-page\">\r\n      <div className=\"create-page__img-box\">\r\n        <svg className=\"create-page__img\" viewBox=\"0 0 100 100\">\r\n          <use href={sprite + \"#Notes-bro\"}></use>\r\n        </svg>\r\n      </div>\r\n      <div className=\"create-page__main\">\r\n        <h3 className=\"header-medium\">Today I am grateful for..</h3>\r\n\r\n        {localNewPhrase ? (\r\n          <TextAreaForm onSubmit={onSubmit} localNewPhrase={localNewPhrase} />\r\n        ) : (\r\n          <TextAreaForm onSubmit={onSubmit} localNewPhrase={localNewPhrase} />\r\n        )}\r\n      </div>\r\n      <Link to=\"/home\">\r\n        <span className=\"create-page__back-arrow arrow left\">&#8592;</span>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SpinnerOverlay = styled.div`\r\n  height: 60vh;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SpinnerContainer = styled.div`\r\n  display: inline-block;\r\n  width: 5rem;\r\n  height: 5rem;\r\n  border: 3px solid #00a08f;\r\n  border-radius: 50%;\r\n  border-top-color: #00a08f;\r\n  animation: spin 1s ease-in-out infinite;\r\n  -webkit-animation: spin 1s ease-in-out infinite;\r\n  @keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n  @-webkit-keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { SpinnerContainer, SpinnerOverlay } from \"./LoadingSpinnerStyles\";\r\n\r\nconst LoadingSpinner = (WrappedComponent) => {\r\n  const Spinner = ({ isLoading, ...otherProps }) => {\r\n    return isLoading ? (\r\n      <SpinnerOverlay>\r\n        <SpinnerContainer />\r\n      </SpinnerOverlay>\r\n    ) : (\r\n      <WrappedComponent {...otherProps} />\r\n    );\r\n  };\r\n  return Spinner;\r\n};\r\nexport default LoadingSpinner;\r\n","import React, { useEffect, useState } from \"react\";\nimport SplashPage from \"./pages/SplashPage/SplashPage.jsx\";\nimport HomePage from \"./pages/Home/Home.jsx\";\nimport CreatePage from \"./pages/CreatePage/CreatePage.jsx\";\nimport { handleSaveDataToLocal } from \"./utils/utils\";\nimport { Switch, Route } from \"react-router-dom\";\nimport LoadSpinner from \"./components/LoadingSpinner/LoadingSpinner.jsx\";\nimport axios from \"axios\";\n\nconst HomePageWithSpinner = LoadSpinner(HomePage);\nfunction App() {\n  const [data, setData] = useState({ allPhrases: [] });\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const resp = await axios.get(\"/phrases\");\n      setData(resp.data);\n      setIsLoading(false);\n      handleSaveDataToLocal(resp.data);\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <header>\n        <h2>Gratitude Journal</h2>\n      </header>\n      <Switch>\n        <Route exact path=\"/\" component={SplashPage} />\n        <Route\n          exact\n          path=\"/home\"\n          render={(props) => (\n            <HomePageWithSpinner isLoading={isLoading} {...props} />\n          )}\n        />\n        <Route\n          exact\n          path=\"/create\"\n          render={() => <CreatePage allPhrases={data} />}\n        />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState } from \"react\";\r\nimport sprite from \"../../svg-icons/sprite.svg\";\r\nimport Moment from \"react-moment\";\r\nimport \"moment-timezone\";\r\nimport PhraseList from \"../../components/PhrasesList/PhrasesList\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"../../sass/style.scss\";\r\n\r\nexport default function Home() {\r\n  const [searchInput, setInput] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    const searchValue = e.target.value;\r\n    setInput(searchValue);\r\n  };\r\n\r\n  const allLocalPhrasesArr = JSON.parse(\r\n    localStorage.getItem(\"allLocalPhrases\")\r\n  );\r\n\r\n  let allLocalPhrases = allLocalPhrasesArr[0];\r\n  const lastPost = allLocalPhrasesArr?.slice(0).pop();\r\n\r\n  const newPost = JSON.parse(localStorage.getItem(\"localNewPhrase\"));\r\n\r\n  const searchResults = allLocalPhrasesArr?.filter((item) =>\r\n    item?.phrase?.toLowerCase().includes(searchInput.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"home-page\">\r\n      <div className=\"search-section\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search..\"\r\n          className=\"search__input\"\r\n          name=\"searchInput\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      {searchInput ? (\r\n        <PhraseList\r\n          searchResults={searchResults}\r\n          allLocalPhrases={allLocalPhrases}\r\n        />\r\n      ) : (\r\n        <div className=\"home-page__main-section\">\r\n          <svg className=\"home-page__img\" viewBox=\"0 0 100 100\">\r\n            <use href={sprite + \"#Left hander-cuate\"}></use>\r\n          </svg>\r\n          {!allLocalPhrases ? (\r\n            <h2 className=\"header-medium\">What are you grateful for today?</h2>\r\n          ) : (\r\n            <span>\r\n              <h2 className=\"header-medium\">Today I am grateful for..</h2>\r\n\r\n              <p className=\"gratitude-text\">\r\n                {newPost ? newPost.phrase : lastPost.phrase}\r\n              </p>\r\n              <span className=\"home-page__date\">\r\n                Last update\r\n                <Moment format=\"MMM Do YYYY\">\r\n                  {newPost ? newPost.createdAt : lastPost.createdAt}\r\n                </Moment>\r\n              </span>\r\n              <Link to=\"/create\">\r\n                {!allLocalPhrases ? (\r\n                  <button className=\"home-page__btn btn\">&#43; Create</button>\r\n                ) : (\r\n                  <button className=\"home-page__btn btn\"> Edit</button>\r\n                )}\r\n              </Link>\r\n            </span>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}